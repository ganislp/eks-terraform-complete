https://github.com/stacksimplify/terraform-on-aws-eks/blob/main/19-EKS-Admins-AWS-Admin-User/README.md


Configure kubeconfig for kubelet

aws eks --region us-east-1 update-kubeconfig --name  demo-eks

kunectl get nodes
kubectl get nodes -o wide

kubectl get svc

---------------------------
ps -ef | grep kube

cat /etc/kubernetes/kubelet/kubelet-config.json

cat /var/lib/kubelet/kubeconfig

nslookup https://D7D657EBBAF36CDB03BCD1AA5364D5B3.gr7.us-east-1.eks.amazonaws.com

---------------------------kube-system-------------------
aws-node - container - demonset
kube-proxy - container - demonset
core-dns  - container - deployment

------------------------------------------
# Get OpenID Connect provider URL for EKS Cluster
Go to Services -> EKS -> hr-dev-eksdemo1 -> Configuration -> Details -> OpenID Connect provider URL

# EKS OpenID Connect Well Known Configuration URL
<EKS OpenID Connect provider URL>/.well-known/openid-configuration

# Sample
https://oidc.eks.us-east-1.amazonaws.com/id/C7F5DC7E4B1AA765CA712C54F605BB75/.well-known/openid-configuration

------------------------------------------------

Step-09: Patch CoreDNS Pod in kube-system to run on EKS Fargate Profile

# Verify Pods 
kubectl -n kube-system get pods
Observation: Should see coredns pods in pending state

# Run the following command to remove the eks.amazonaws.com/compute-type : ec2 annotation from the CoreDNS pods.
kubectl patch deployment coredns \
    -n kube-system \
    --type json \
    -p='[{"op": "remove", "path": "/spec/template/metadata/annotations/eks.amazonaws.com~1compute-type"}]'

# Delete & Recreate CoreDNS Pods so that they can get scheduled on Fargate 
kubectl rollout restart -n kube-system deployment coredns

kubectl rollout restart -n kube-system deployment aws-load-balancer-controller

# Verify Pods 
kubectl -n kube-system get pods
Observation: 
1. Wait for a minute or two
2. Should see coredns pods in Running state

# Verify Worker Nodes
kubectl get nodes
Observation: Should see two Fargate nodes related to CoreDNS running
